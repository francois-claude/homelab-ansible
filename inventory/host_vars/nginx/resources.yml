---
resources__host_paths:

  # nginx default configuration
  - path: '/etc/nginx/sites-available/default'
    state: 'absent'

  # nginx snippets dir
  - path: '/etc/nginx/snippets'
    owner: 'root'
    group: 'root'
    mode: '0755'
    state: 'directory'
    acl:
      - etype: 'user'
        entity: 'fclaude'
        permissions: 'rwx'
        state: 'present'

  # nginx sekrits dir
  - path: '/etc/nginx/.sekrit'
    owner: 'root'
    group: 'root'
    mode: '0755'
    state: 'directory'
    acl:
      - etype: 'user'
        entity: 'fclaude'
        permissions: 'rwx'
        state: 'present'

      - etype: 'user'
        entity: 'www-data'
        permissions: 'rwx'
        state: 'present'

  # nginx static files (hosting)
  - path: '/var/www/static-files/.well-known/matrix'
    owner: 'root'
    group: 'root'
    mode: '0755'
    state: 'directory'
    acl:
      - etype: 'user'
        entity: 'fclaude'
        permissions: 'rwx'
        state: 'present'

      - etype: 'user'
        entity: 'www-data'
        permissions: 'rwx'
        state: 'present'


  # nginx log dir
  - path: '/var/log/nginx'
    owner: 'root'
    group: 'adm'
    mode: '0750'
    state: 'directory'
    acl:
      - etype: 'user'
        entity: 'fclaude'
        permissions: 'rwx'
        state: 'present'

  # certbot etc dir
  - path: '/etc/certbot'
    owner: 'root'
    group: 'root'
    mode: '0750'
    state: 'directory'
    acl:
      - etype: 'user'
        entity: 'fclaude'
        permissions: 'rwx'
        state: 'present'

  # cloudflare etc dir
  - path: '/etc/cloudflare'
    owner: 'root'
    group: 'root'
    mode: '0750'
    state: 'directory'
    acl:
      - etype: 'user'
        entity: 'fclaude'
        permissions: 'rwx'
        state: 'present'

  # cloudflare etc sekrit
  - path: '/etc/cloudflare/.sekrit'
    owner: 'root'
    group: 'root'
    mode: '0750'
    state: 'directory'
    acl:
      - etype: 'user'
        entity: 'fclaude'
        permissions: 'rwx'
        state: 'present'

resources__host_files:

  # nginx configuration
  - src: '{{ resources__src + ansible_hostname + "/etc/nginx/nginx.conf" }}'
    dest: '/etc/nginx/nginx.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
    state: 'present'

  # static html files
  - src: '{{ resources__src + ansible_hostname + "/var/www/html/base-domain.html" }}'
    dest: '/var/www/html/base-domain.html'
    owner: 'root'
    group: 'root'
    mode: '0444'
    state: 'present'

  - src: '{{ resources__src + ansible_hostname + "/var/www/static-files/.well-known/matrix/client" }}'
    dest: '/var/www/static-files/.well-known/matrix/client'
    owner: 'root'
    group: 'root'
    mode: '0444'
    state: 'present'

  - src: '{{ resources__src + ansible_hostname + "/var/www/static-files/.well-known/matrix/server" }}'
    dest: '/var/www/static-files/.well-known/matrix/server'
    owner: 'root'
    group: 'root'
    mode: '0444'
    state: 'present'

  # fastcgi snippet
  - src: '{{ resources__src + ansible_hostname + "/etc/nginx/snippets/fastcgi-php.conf" }}'
    dest: '/etc/nginx/snippets/fastcgi-php.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
    state: 'present'

  # snakeoil snippet
  - src: '{{ resources__src + ansible_hostname + "/etc/nginx/snippets/snakeoil.conf" }}'
    dest: '/etc/nginx/snippets/snakeoil.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
    state: 'present'

  # htpasswd snippet (absent)
  - src: '{{ resources__src + ansible_hostname + "/etc/nginx/dot_sekrit/dot_htpasswd_additive" }}'
    dest: '/etc/nginx/.sekrit/.htpasswd_additive'
    owner: 'root'
    group: 'root'
    mode: '0400'
    state: 'absent'
    acl:
      - etype: 'user'
        entity: 'www-data'
        permissions: 'r'
        state: 'absent'

# cloudflare configurations

  # keys 1
  - src: '{{ resources__src + ansible_hostname + "/etc/cloudflare/dot_sekrit/cloudflare-primary.ini" }}'
    dest: '/etc/cloudflare/.sekrit/cloudflare-primary.ini'
    owner: 'root'
    group: 'root'
    mode: '0400'
    state: 'present'

  # keys 2
  - src: '{{ resources__src + ansible_hostname + "/etc/cloudflare/dot_sekrit/cloudflare-secondary.ini" }}'
    dest: '/etc/cloudflare/.sekrit/cloudflare-secondary.ini'
    owner: 'root'
    group: 'root'
    mode: '0400'
    state: 'present'

  # ufw script (absent)
  - src: '{{ resources__src + ansible_hostname + "/etc/cloudflare/cloudflare-ufw.sh" }}'
    dest: '/etc/cloudflare/cloudflare-ufw.sh'
    owner: 'root'
    group: 'root'
    mode: '0700'
    state: 'absent'

# nginx sites

  # base domain
  - src: '{{ resources__src + ansible_hostname + "/etc/nginx/sites-available/base-domain.conf" }}'
    dest: '/etc/nginx/sites-available/base-domain.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
    state: 'present'

  # plex
  - src: '{{ resources__src + ansible_hostname + "/etc/nginx/sites-available/plex.conf" }}'
    dest: '/etc/nginx/sites-available/plex.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
    state: 'present'

  # nextcloud
  - src: '{{ resources__src + ansible_hostname + "/etc/nginx/sites-available/nextcloud.conf" }}'
    dest: '/etc/nginx/sites-available/nextcloud.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
    state: 'present'

  # tautulli (absent)
  - src: '{{ resources__src + ansible_hostname + "/etc/nginx/sites-available/tautulli.conf" }}'
    dest: '/etc/nginx/sites-available/tautulli.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
    state: 'absent'

  # bitwarden
  - src: '{{ resources__src + ansible_hostname + "/etc/nginx/sites-available/bitwarden.conf" }}'
    dest: '/etc/nginx/sites-available/bitwarden.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
    state: 'absent'

  # sync
  - src: '{{ resources__src + ansible_hostname + "/etc/nginx/sites-available/sync.conf" }}'
    dest: '/etc/nginx/sites-available/sync.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
    state: 'present'

  # synapse
  - src: '{{ resources__src + ansible_hostname + "/etc/nginx/sites-available/synapse.conf" }}'
    dest: '/etc/nginx/sites-available/synapse.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
    state: 'absent'

  # matrix
  - src: '{{ resources__src + ansible_hostname + "/etc/nginx/sites-available/matrix.conf" }}'
    dest: '/etc/nginx/sites-available/matrix.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
    state: 'present'

  # matrix
  - src: '{{ resources__src + ansible_hostname + "/etc/nginx/sites-available/matrix-fed.conf" }}'
    dest: '/etc/nginx/sites-available/matrix-fed.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
    state: 'present'

  # element
  - src: '{{ resources__src + ansible_hostname + "/etc/nginx/sites-available/element.conf" }}'
    dest: '/etc/nginx/sites-available/element.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
    state: 'present'

  # canvas (absent)
  - src: '{{ resources__src + ansible_hostname + "/etc/nginx/sites-available/canvas.conf" }}'
    dest: '/etc/nginx/sites-available/canvas.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
    state: 'absent'

  # cram (absent)
  - src: '{{ resources__src + ansible_hostname + "/etc/nginx/sites-available/cram.conf" }}'
    dest: '/etc/nginx/sites-available/cram.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
    state: 'absent'

  # jackett (absent)
  - src: '{{ resources__src + ansible_hostname + "/etc/nginx/sites-available/jackett.conf" }}'
    dest: '/etc/nginx/sites-available/jackett.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
    state: 'absent'

  # request (absent)
  - src: '{{ resources__src + ansible_hostname + "/etc/nginx/sites-available/request.conf" }}'
    dest: '/etc/nginx/sites-available/request.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
    state: 'absent'

  # kibana (absent)
  - src: '{{ resources__src + ansible_hostname + "/etc/nginx/sites-available/kibana.conf" }}'
    dest: '/etc/nginx/sites-available/kibana.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
    state: 'absent'

  # rss (absent)
  - src: '{{ resources__src + ansible_hostname + "/etc/nginx/sites-available/rss.conf" }}'
    dest: '/etc/nginx/sites-available/rss.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
    state: 'absent'

  # deluge (absent)
  - src: '{{ resources__src + ansible_hostname + "/etc/nginx/sites-available/deluge.conf" }}'
    dest: '/etc/nginx/sites-available/deluge.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
    state: 'absent'

  # irc (absent)
  - src: '{{ resources__src + ansible_hostname + "/etc/nginx/sites-available/irc.conf" }}'
    dest: '/etc/nginx/sites-available/irc.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
    state: 'absent'

  # nzbget (absent)
  - src: '{{ resources__src + ansible_hostname + "/etc/nginx/sites-available/nzbget.conf" }}'
    dest: '/etc/nginx/sites-available/nzbget.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
    state: 'absent'

  # default (absent)
  - src: '{{ resources__src + ansible_hostname + "/etc/nginx/sites-available/default_site_debian_10.conf" }}'
    dest: '/etc/nginx/sites-available/default.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
    state: 'absent'

# certbot configurations
  # jackett (absent)
  - src: '{{ resources__src + ansible_hostname + "/etc/certbot/certbot-jackett.sh" }}'
    dest: '/etc/certbot/certbot-jackett.sh'
    owner: 'root'
    group: 'root'
    mode: '0700'
    state: 'absent'
    acl:
      - etype: 'user'
        entity: 'fclaude'
        permissions: 'rwx'
        state: 'present'

  # jackett (absent)
  - src: '{{ resources__src + ansible_hostname + "/etc/certbot/certbot-jackett.sh" }}'
    dest: '/etc/certbot/certbot-jackett.sh'
    owner: 'root'
    group: 'root'
    mode: '0700'
    state: 'absent'
    acl:
      - etype: 'user'
        entity: 'fclaude'
        permissions: 'rwx'
        state: 'present'

  # kibana (absent)
  - src: '{{ resources__src + ansible_hostname + "/etc/certbot/certbot-kibana.sh" }}'
    dest: '/etc/certbot/certbot-kibana.sh'
    owner: 'root'
    group: 'root'
    mode: '0700'
    state: 'absent'
    acl:
      - etype: 'user'
        entity: 'fclaude'
        permissions: 'rwx'
        state: 'present'

  # nextcloud (absent)
  - src: '{{ resources__src + ansible_hostname + "/etc/certbot/certbot-nextcloud.sh" }}'
    dest: '/etc/certbot/certbot-nextcloud.sh'
    owner: 'root'
    group: 'root'
    mode: '0700'
    state: 'absent'
    acl:
      - etype: 'user'
        entity: 'fclaude'
        permissions: 'rwx'
        state: 'present'

  # plex (absent)
  - src: '{{ resources__src + ansible_hostname + "/etc/certbot/certbot-plex.sh" }}'
    dest: '/etc/certbot/certbot-plex.sh'
    owner: 'root'
    group: 'root'
    mode: '0700'
    state: 'absent'
    acl:
      - etype: 'user'
        entity: 'fclaude'
        permissions: 'rwx'
        state: 'present'

  # popcorn (absent)
  - src: '{{ resources__src + ansible_hostname + "/etc/certbot/certbot-popcorn.sh" }}'
    dest: '/etc/certbot/certbot-popcorn.sh'
    owner: 'root'
    group: 'root'
    mode: '0700'
    state: 'absent'
    acl:
      - etype: 'user'
        entity: 'fclaude'
        permissions: 'rwx'
        state: 'present'

  # request (absent)
  - src: '{{ resources__src + ansible_hostname + "/etc/certbot/certbot-request.sh" }}'
    dest: '/etc/certbot/certbot-request.sh'
    owner: 'root'
    group: 'root'
    mode: '0700'
    state: 'absent'
    acl:
      - etype: 'user'
        entity: 'fclaude'
        permissions: 'rwx'
        state: 'present'

  # requests (absent)
  - src: '{{ resources__src + ansible_hostname + "/etc/certbot/certbot-requests.sh" }}'
    dest: '/etc/certbot/certbot-requests.sh'
    owner: 'root'
    group: 'root'
    mode: '0700'
    state: 'absent'
    acl:
      - etype: 'user'
        entity: 'fclaude'
        permissions: 'rwx'
        state: 'present'

  # rss (absent)
  - src: '{{ resources__src + ansible_hostname + "/etc/certbot/certbot-rss.sh" }}'
    dest: '/etc/certbot/certbot-rss.sh'
    owner: 'root'
    group: 'root'
    mode: '0700'
    state: 'absent'
    acl:
      - etype: 'user'
        entity: 'fclaude'
        permissions: 'rwx'
        state: 'present'

  # sync (absent)
  - src: '{{ resources__src + ansible_hostname + "/etc/certbot/certbot-sync.sh" }}'
    dest: '/etc/certbot/certbot-sync.sh'
    owner: 'root'
    group: 'root'
    mode: '0700'
    state: 'absent'
    acl:
      - etype: 'user'
        entity: 'fclaude'
        permissions: 'rwx'
        state: 'present'

  # tautulli (absent)
  - src: '{{ resources__src + ansible_hostname + "/etc/certbot/certbot-tautulli.sh" }}'
    dest: '/etc/certbot/certbot-tautulli.sh'
    owner: 'root'
    group: 'root'
    mode: '0700'
    state: 'absent'
    acl:
      - etype: 'user'
        entity: 'fclaude'
        permissions: 'rwx'
        state: 'present'

  # bitwarden (absent)
  - src: '{{ resources__src + ansible_hostname + "/etc/certbot/certbot-bitwarden.sh" }}'
    dest: '/etc/certbot/certbot-bitwarden.sh'
    owner: 'root'
    group: 'root'
    mode: '0700'
    state: 'absent'
    acl:
      - etype: 'user'
        entity: 'fclaude'
        permissions: 'rwx'
        state: 'present'

  # canvas (absent)
  - src: '{{ resources__src + ansible_hostname + "/etc/certbot/certbot-canvas.sh" }}'
    dest: '/etc/certbot/certbot-canvas.sh'
    owner: 'root'
    group: 'root'
    mode: '0700'
    state: 'absent'
    acl:
      - etype: 'user'
        entity: 'fclaude'
        permissions: 'rwx'
        state: 'present'

  # cram (absent)
  - src: '{{ resources__src + ansible_hostname + "/etc/certbot/certbot-cram.sh" }}'
    dest: '/etc/certbot/certbot-cram.sh'
    owner: 'root'
    group: 'root'
    mode: '0700'
    state: 'absent'
    acl:
      - etype: 'user'
        entity: 'fclaude'
        permissions: 'rwx'
        state: 'present'

  # synapse (present)
  - src: '{{ resources__src + ansible_hostname + "/etc/certbot/certbot-synapse.sh" }}'
    dest: '/etc/certbot/certbot-synapse.sh'
    owner: 'root'
    group: 'root'
    mode: '0700'
    state: 'absent'
    acl:
      - etype: 'user'
        entity: 'fclaude'
        permissions: 'rwx'
        state: 'present'
